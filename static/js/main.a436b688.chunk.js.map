{"version":3,"sources":["resource/images/painting00.jpg","resource/images/painting01.jpg","resource/images/painting02.jpg","resource/images/painting03.jpg","resource/images/painting04.jpg","resource/images/painting05.jpg","resource/images/painting06.jpg","resource/images/back.png","resource/images/front01A.png","resource/images/front01B.png","resource/images/front02A.png","resource/images/front02B.png","resource/images/front03A.png","resource/images/front03B.png","resource/images/front04A.png","resource/images/front04B.png","resource/images/front05A.png","resource/images/front05B.png","resource/images/front06A.png","resource/images/front06B.png","resource/videos/background03.mp4","components/WallPaintings.js","components/Plate.js","components/Plates.js","App.js","store/actions.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","WallPaintings","props","paintings","src","painting00","painter","name","painting01","painting02","painting03","painting04","painting05","painting06","opacity","paintingNumber","wallPaintings","map","painting","index","className","key","style","alt","Plate","onClick","onclick","id","plateId","front","back","Plates","lockBoard","firstClickGoup","firstClickId","count","onclickHandle","platesInOrder","front01A","front01B","front02A","front02B","front03A","front03B","front04A","front04B","front05A","front05B","front06A","front06B","shuffleArr","arr","n","length","Math","floor","random","tempt","plates","e","currentTarget","flipPlate","check","document","getElementById","classList","toggle","youWin","remove","group","slice","setTimeout","updateWallPaintingNo","platesRender","this","plate","React","Component","App","state","platesOpacity","nextUpdateWallPaintingNo","str","updatePaintings","parseInt","refreshBoard","window","location","reload","timer","setState","clearTimeout","autoPlay","muted","backgroundVideo","type","href","paintingNumbers","connect","wallPaintingNo","dispatch","num","number","Boolean","hostname","match","initialState","reducer","action","newNumbers","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a436b688.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/painting00.66f44c3c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/painting01.f805070f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/painting02.91ef7022.jpg\";","module.exports = __webpack_public_path__ + \"static/media/painting03.c8bad60c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/painting04.88edf35f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/painting05.ef6fc99f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/painting06.13348fe6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/back.67ff6023.png\";","module.exports = __webpack_public_path__ + \"static/media/front01A.4e949b25.png\";","module.exports = __webpack_public_path__ + \"static/media/front01B.df43d89a.png\";","module.exports = __webpack_public_path__ + \"static/media/front02A.2a80f720.png\";","module.exports = __webpack_public_path__ + \"static/media/front02B.fbc3a5e0.png\";","module.exports = __webpack_public_path__ + \"static/media/front03A.5eab0e1f.png\";","module.exports = __webpack_public_path__ + \"static/media/front03B.201a87be.png\";","module.exports = __webpack_public_path__ + \"static/media/front04A.20da2d42.png\";","module.exports = __webpack_public_path__ + \"static/media/front04B.212876c8.png\";","module.exports = __webpack_public_path__ + \"static/media/front05A.9a565f6e.png\";","module.exports = __webpack_public_path__ + \"static/media/front05B.84a7d297.png\";","module.exports = __webpack_public_path__ + \"static/media/front06A.2e8aa448.png\";","module.exports = __webpack_public_path__ + \"static/media/front06B.d529748b.png\";","module.exports = __webpack_public_path__ + \"static/media/background03.c59e76b3.mp4\";","import React from 'react';\r\n\r\nimport painting00 from '../resource/images/painting00.jpg';\r\nimport painting01 from '../resource/images/painting01.jpg';\r\nimport painting02 from '../resource/images/painting02.jpg';\r\nimport painting03 from '../resource/images/painting03.jpg';\r\nimport painting04 from '../resource/images/painting04.jpg';\r\nimport painting05 from '../resource/images/painting05.jpg';\r\nimport painting06 from '../resource/images/painting06.jpg';\r\n\r\nconst WallPaintings = (props) => {\r\n    const painting0={\r\n        src:painting00,\r\n        painter:'Aristotle (385BC-323BC)',\r\n        name:''\r\n    };\r\n    const painting1={\r\n        src:painting01,\r\n        painter:'Pierre-Auguste Renoir (1841-1919)',\r\n        name:'Dance in the Country(1883)'\r\n    };\r\n    const painting2={\r\n        src:painting02,\r\n        painter:'Pierre-Auguste Renoir (1841-1919)',\r\n        name:'Venus with Mercury and Cupid(1525)'\r\n    };\r\n    const painting3={\r\n        src:painting03,\r\n        painter:'Jan van Eyck(1390-1441)',\r\n        name:'Arnolfini Portrait(1434)'\r\n    };\r\n    const painting4={\r\n        src:painting04,\r\n        painter:'Peter Paul Rubens(1577-1640)',\r\n        name:'Honeysuckle Bower(1609)'\r\n    };\r\n    const painting5={\r\n        src:painting05,\r\n        painter:'Gustav Klimt (1862-1918)',\r\n        name:'The Kiss (1907–1908)'\r\n    };\r\n    const painting6={\r\n        src:painting06,\r\n        painter:'Pierre Auguste Cot (1837-1883)',\r\n        name:'The Storm(1880)'\r\n    };\r\n    const paintings = [painting0,painting1,painting2,painting3,painting4,painting5,painting6];\r\n\r\n    const opacity = ['0','0','0','0','0','0','0'];\r\n\r\n    opacity[props.paintingNumber] = \"1\";\r\n\r\n    const wallPaintings = paintings.map((painting,index)=>{return(\r\n        <div className = \"painting\" key = {index} style={{opacity:opacity[index]}}>\r\n            <img src = {painting.src} alt = {props.alt} />\r\n            <div className=\"paintingInfo\">\r\n                <div>{painting.painter}</div>\r\n                <div>{painting.name}</div>\r\n            </div>\r\n        </div>\r\n    )})\r\n\r\n    return (\r\n        <div className=\"paintings\">\r\n            {wallPaintings}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WallPaintings;","import React from 'react';\r\n\r\nconst Plate = (props) => {\r\n    return (\r\n        <div className=\"plate\" onClick={props.onclick} id={props.plateId} >\r\n            <img src = {props.front} alt = 'plateFront'></img>\r\n            <img src = {props.back} alt = 'plateBack'></img>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Plate;","import React from 'react';\r\nimport Plate from './Plate';\r\n\r\nimport back from '../resource/images/back.png';\r\nimport front01A from '../resource/images/front01A.png';\r\nimport front01B from '../resource/images/front01B.png';\r\nimport front02A from '../resource/images/front02A.png';\r\nimport front02B from '../resource/images/front02B.png';\r\nimport front03A from '../resource/images/front03A.png';\r\nimport front03B from '../resource/images/front03B.png';\r\nimport front04A from '../resource/images/front04A.png';\r\nimport front04B from '../resource/images/front04B.png';\r\nimport front05A from '../resource/images/front05A.png';\r\nimport front05B from '../resource/images/front05B.png';\r\nimport front06A from '../resource/images/front06A.png';\r\nimport front06B from '../resource/images/front06B.png';\r\n\r\nclass Plates extends React.Component {\r\n    lockBoard = false;\r\n    firstClickGoup = '';\r\n    firstClickId = '';\r\n    count = 0;\r\n\r\n    onclickHandle = {'01A':true,'02A':true,'03A':true,'04A':true,'05A':true,'06A':true,'01B':true,'02B':true,'03B':true,'04B':true,'05B':true,'06B':true};\r\n\r\n    platesInOrder = [['01A',front01A],['01B',front01B],['02A',front02A],['02B',front02B],['03A',front03A],['03B',front03B],['04A',front04A],['04B',front04B],['05A',front05A],['05B',front05B],['06A',front06A],['06B',front06B]];\r\n\r\n    shuffleArr = (arr) => {\r\n        let n = arr.length;\r\n        while (n > 1){\r\n          const index = Math.floor(Math.random() * n);\r\n          const tempt = arr[index];\r\n          arr[index] = arr[n-1];\r\n          arr[n-1] = tempt;\r\n          n--;\r\n        }\r\n        return arr;\r\n    };\r\n\r\n    plates = this.shuffleArr(this.platesInOrder); \r\n\r\n    onclick = (e) => {\r\n        if (!this.lockBoard){\r\n            const id = e.currentTarget.id;\r\n            if (this.onclickHandle[id]) {\r\n                this.flipPlate(id);\r\n                this.check(id);\r\n            }\r\n        }\r\n    }\r\n\r\n    flipPlate = (id) => {\r\n        document.getElementById(id).classList.toggle('flip');\r\n    }\r\n\r\n    youWin = () => {\r\n        document.getElementById('youwin').classList.remove('hide');\r\n    }\r\n\r\n    check = (id) => {\r\n        const group = id.slice(0,2);\r\n        // //first click\r\n        if (!this.firstClickGoup) {\r\n             this.onclickHandle[id] = false;\r\n             this.firstClickGoup = group;\r\n             this.firstClickId = id;\r\n        } else { //second click\r\n            if (this.firstClickGoup === group){ //second click match\r\n                this.onclickHandle[id] = false;   //frozen the two matched plates\r\n                setTimeout(()=>{this.props.updateWallPaintingNo(group)}, 400)  //update Wall paintings\r\n                if (this.count === 5) { //check if the game is done\r\n                    setTimeout(()=>{this.youWin()}, 500);\r\n                } else{ \r\n                    this.firstClickGoup='';\r\n                    this.firstClickId='';\r\n                    this.count++;\r\n                }\r\n            }else { //second click not match \r\n             this.lockBoard = true;\r\n             setTimeout(()=>{          //flip back the two plates\r\n               this.flipPlate(id);\r\n               this.flipPlate(this.firstClickId);\r\n               this.onclickHandle[this.firstClickId] = true;\r\n               this.firstClickGoup='';\r\n               this.firstClickId='';\r\n               this.lockBoard = false;\r\n             },800);\r\n           }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const platesRender = this.plates.map((plate)=><Plate key={plate[0]} plateId={plate[0]} onclick={this.onclick} front={plate[1]} back={back} />)\r\n        return(\r\n            <div className=\"plates\">\r\n                {platesRender}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Plates;","import React from 'react';\nimport './App.scss';\n\nimport WallPaintings from './components/WallPaintings';\nimport Plates from './components/Plates';\n\nimport backgroundVideo from './resource/videos/background03.mp4';\n\nimport {connect} from 'react-redux';\nimport * as actionTypes from './store/actions';\n\nclass App extends React.Component{\n  state={ platesOpacity:0 };\n\n  nextUpdateWallPaintingNo = 0;\n\n  updateWallPaintingNo = (str) => {\n    this.props.updatePaintings(this.nextUpdateWallPaintingNo,parseInt(str));\n    this.nextUpdateWallPaintingNo = 1^this.nextUpdateWallPaintingNo;\n  };\n\n  refreshBoard = () => {\n    window.location.reload();\n  }\n\n  timer = null;  \n\n  componentDidMount() {  \n    this.timer = setTimeout(()=>{this.setState({platesOpacity:1})}, 1500) //shorter than the videos length\n  };\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"content\">\n          <div className=\"backgroundVideo\">\n            <video className=\"theVideo\" autoPlay muted >\n              <source src={backgroundVideo} type=\"video/mp4\" />\n            </video>\n          </div>\n\n          <div className =\"buttonR\" onClick = {this.refreshBoard}>Restart Game</div>\n\n          <div className=\"scroll\" style={{opacity:this.state.platesOpacity}}>\n            <div className = \"title\">Find the Love</div>\n            <div className = \"description\">Click to flip over plates below and help the person behind to find their other half in the masterpeice.  </div>\n            <Plates updateWallPaintingNo={this.updateWallPaintingNo}/>\n            <div className = \"copyRight\">Developed and designed by<a href=\"https://jackie-github.github.io/xujiaqi/\"> Jiaqi Xu </a>.</div>\n          </div>\n\n          <div className=\"wallPaintings wallPaintingleft\">\n            <WallPaintings paintingNumber = {this.props.paintingNumbers[0]} alt = 'LeftPainting' />\n          </div>\n          <div className=\"wallPaintings wallPaintingright\">\n            <WallPaintings paintingNumber = {this.props.paintingNumbers[1]} alt = 'RightPainting' />\n          </div>\n          <div className = \"youwin hide\" id=\"youwin\" >YOU WIN!</div>\n        </div>\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    paintingNumbers:state.wallPaintingNo\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updatePaintings: (index,num) => dispatch({type:actionTypes.UPDATEPAINTINGNO,index:index,number:num})\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);","export const UPDATEPAINTINGNO = 'UPDATEPAINTINGNO';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from './actions';\r\n\r\nconst initialState = {wallPaintingNo:[0,0]};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    if (action.type === actionTypes.UPDATEPAINTINGNO){\r\n        const newNumbers = [...state.wallPaintingNo];\r\n        newNumbers[action.index] = action.number;\r\n        return { wallPaintingNo:newNumbers };\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport reducer from './store/reducer';\n\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store} ><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}